load_binance:
  symbol: 'BTCUSDT'
  start: '2023-05-01'
  end: '2024-05-01'
  interval: '1m'
  paths:
     output: 'data/raw/btc_2023_10_1.csv'

slice_ts:
  column_value: 'open'
  period: 30
  step: 30
  rolling_period: 10
  predict_period: 20
  train_sample: -1
  paths:
     input: ${load_binance.paths.output}
     output:
        cluster: 'data/interim/btc_clst_2021_1_1.30_10.npy'
        predict: 'data/interim/btc_prct_2021_1_1.30_10.csv'
        scaler: 'models/scaler.pickle'

optuna_optimize: # параметры оптимизации для поиска наилучшего числа кластеров
  optimize_range: # число кластеров, которые подбирает модель
     opt_min: 40 # минимально
     opt_max: 200 # максимально
     opt_step: 10 # шаг подбора
  model_prmt:
     max_iter: 100
     n_init: 1
     n_clusters: 10
  best_clusters: 10
  n_trials: 10
  model_name: 'KShape'
  paths:
     input: ${slice_ts.paths.cluster}
     output:
        parametrs: 'models/KShape_best.yaml'

train_save:
  model_name: 'KShape'
  paths:
     input:
        data: ${slice_ts.paths.cluster}
        model_par: "models/KShape_best.yaml"
     output:
        model: 'models/KShape.pickle'

visualization:
  n_best: 10
  paths:
     input:
        model_path: ${train_save.paths.output.model}
        data_path: ${slice_ts.paths.cluster}
        pred_df_path: ${slice_ts.paths.predict}
        
 